<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-RIP7FCT2" failures="0" tests="3" name="Test" time="0.057" errors="0" timestamp="2023-03-23T15:44:55 IST">
  <testcase classname="testNgPack.TestNg" name="@BeforeTest openBrowser" time="-1.679566495421E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeTest annotated openBrowser.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeTest annotated openBrowser.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest openBrowser -->
  <testcase classname="testNgPack.TestNg" name="@BeforeClass OpenBrowser" time="-1.679566495443E9">
    <skipped/>
  </testcase> <!-- @BeforeClass OpenBrowser -->
  <testcase classname="testNgPack.TestNg" name="@BeforeMethod BrowserOpen" time="-1.679566495455E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserOpen -->
  <testcase classname="testNgPack.TestNg" name="@AfterMethod afterMethod" time="-1.679566495461E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPack.TestNg" name="@BeforeMethod BrowserOpen" time="-1.679566495465E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserOpen -->
  <testcase classname="testNgPack.TestNg" name="@AfterMethod afterMethod" time="-1.679566495467E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPack.TestNg" name="@BeforeMethod BrowserOpen" time="-1.679566495469E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod BrowserOpen -->
  <testcase classname="testNgPack.TestNg" name="@AfterMethod afterMethod" time="-1.679566495473E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNgPack.TestNg" name="@AfterClass afterClass" time="-1.679566495475E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testNgPack.TestNg" name="@AfterTest afterTest" time="-1.679566495476E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testNgPack.TestNg" name="VerifyMassageonForgotPasswordPage" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyMassageonForgotPasswordPage -->
  <testcase classname="testNgPack.TestNg" name="VerifyCancleButtonOnForgotPasswordPage" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyCancleButtonOnForgotPasswordPage -->
  <testcase classname="testNgPack.TestNg" name="VerifyClickSerachButton" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyClickSerachButton -->
</testsuite> <!-- Test -->
